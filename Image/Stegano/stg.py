#!/usr/bin/env python
# -*- coding:Latin-1 -*-

from PIL import Image
import sys


def encode(image, message):
    """Encode message in image"""
    # Get image size
    w, h = image.size
    # Split image in 3 channels
    r, g, b = image.split()
    # Transform channels in list
    r = list(r.getdata())
    # Get message length
    u = len(message)
    # Transform length in binary
    v = bin(len(message))[2:].rjust(8, "0")
    # Transform message in binary
    ascii = [bin(ord(x))[2:].rjust(8, "0") for x in message]
    # Transform list in string
    a = ''.join(ascii)
    # Encode length in first 8 pixels
    for j in range(8):
        r[j] = 2 * int(r[j] // 2) + int(v[j])
    # Encode message in next pixels
    for i in range(8 * u):
        r[i + 8] = 2 * int(r[i + 8] // 2) + int(a[i])
    # Create new image with red channel
    nr = Image.new("L", (w, h))
    nr.putdata(r)
    # Merge 3 channels
    imgnew = Image.merge("RGB", (nr, g, b))
    return imgnew


def decode(image):
    """Decode message from image"""
    # Split image in 3 channels
    r, g, b = image.split()
    # Transform channels in list
    r = list(r.getdata())
    # Get length from first 8 pixels
    v = ''.join([str(r[j] % 2) for j in range(8)])
    # Get message length
    u = int(v, 2)
    # Get message from next pixels
    a = ''.join([str(r[i + 8] % 2) for i in range(8 * u)])
    # Transform binary in string
    message = ''.join([chr(int(a[i:i + 8], 2)) for i in range(0, len(a), 8)])
    return message


def main():
    if len(sys.argv) > 4:
        print("Usage: python stg.py.py encode image.png message")
        print("       python stg.py.py decode image.png")
        sys.exit(1)
    if sys.argv[1] == "encode":
        image = Image.open(sys.argv[2])
        message = sys.argv[3]
        imgnew = encode(image, message)
        imgnew.save("tst2.jpg")
    elif sys.argv[1] == "decode":
        image = Image.open(sys.argv[2])
        message = decode(image)
        print(message)
    else:
        print("Usage: python stg.py.py encode image.png message")
        print("       python stg.py.py decode image.png")
        sys.exit(1)

if __name__ == "__main__":
    main()