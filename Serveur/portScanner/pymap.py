#!/usr/bin/env python
# -*- coding:UTF-8 -*-

import socket
import errno
import sys
import time

# ip = input("Entrez l'adresse IP: ")

def urlToIp(url):
    try:
        ip = socket.gethostbyname(url)
        scanPort(ip)
    except socket.gaierror:
        print("L'hote n'existe pas")

def main():
    if len(sys.argv) > 1:
        url = sys.argv[1]
        urlToIp(url)
    else:
        print("Usage: python pymap.py <url>")


def scanPort(ip):

    ports = [21, 22, 23, 25, 53, 80, 110, 143, 443, 993, 995,
             1723, 3306, 3389, 5900, 8080, 8443, 10000, 1337, 31337]
    portouvert = []
    portferme = []
    portfiltre = []

    i = 0
    j = 0

    #Get date and time for the scan
    date = time.strftime("%d/%m/%Y")
    heure = time.strftime("%H:%M:%S")
    date = date + " " + heure
    banner = r"""
Starting PyMap v1.0 ( https://github.com/Oxooi ) at {0}
    """.format(date)

    #Get time spent for the scan
    debut = time.time()
    fin = time.time()
    temps = fin - debut
    #Cut the time to get only the two first numbers
    temps = str(temps)
    temps = temps[0:4]
    
    #Print the banner
    print(banner)

    while i < 10:
        # On crée le socket
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        retourscan = s.connect_ex((ip, ports[i]))
        # Pour la connexion réussie
        if retourscan == 0:
            # On ferme la connexion
            s.shutdown(socket.SHUT_RDWR)
            # On ferme le socket
            s.close()
            # On ajoute le port à la liste des ports ouverts
            portouvert.append(ports[i])
        # Pour la connexion refusée
        else:
            # erreur de connexion - port fermé
            if errno.errorcode[retourscan] == "ECONNREFUSED":
                # On ajoute le port à la liste des ports fermés
                portferme.append(ports[i])
            # Erreur de connexion - port filtré
            elif errno.errorcode[retourscan] == "EHOSTUNREACH":
                # On ajoute le port à la liste des ports filtrés
                portfiltre.append(ports[i])
            # Erreur de connexion - hote introuvable
            else:
                print("Erreur de connexion - hote introuvable")
                j = 1
                # On sort de la boucle
                i = 10
        i = i + 1
    # Si j = 1 on ferme le programme
    if j == 1:
        print("Fin du programme")
    # On affiche soit les ports ouverts, soit les ports fermés, soit les ports filtrés
    else:
        if len(portouvert) != 0:
            print(r"""
PyMap scan report for ({0})
Host is up. ({1} seconds)
PORT    STATE""".format(ip, temps))
            for port in portouvert:
                print(str(port) + "/tcp  open")
        elif len(portferme) != 0:
            print("Les ports fermés sont: ", portferme)
        elif len(portfiltre) != 0:
            print("Les ports filtrés sont: ", portfiltre)
        else:
            print("Aucun port n'est ouvert, fermé ou filtré")

if __name__ == "__main__":
    main()